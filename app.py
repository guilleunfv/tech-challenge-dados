import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt

# Configura√ß√£o da p√°gina
st.set_page_config(page_title="Tech Challenge - An√°lise de Vinhos", layout="centered")

# T√≠tulo e Introdu√ß√£o
st.title("Tech Challenge - An√°lise de Produ√ß√£o e Com√©rcio de Vinhos üçá")
st.markdown("### Integrantes do Grupo")
st.write("Rosicleia Cavalcante Mota")
st.write("Nathalia Dias Araujo")
st.write("Guillermo Jesus Camahuali Privat")
st.write("Kelly Priscilla Matos Campos")

st.markdown("## Introdu√ß√£o")
st.write("Esta aplica√ß√£o apresenta uma an√°lise detalhada da produ√ß√£o e do com√©rcio de vinhos nos √∫ltimos anos, com foco nas tend√™ncias e compara√ß√µes entre diferentes categorias e subcategorias.")

# Carregar os Dados diretamente do Google Drive
url_comercio = "https://drive.google.com/uc?export=download&id=1f6lHD3fjVLtkyWtP7CgY2vplfAJ9mAkN"
url_producao = "https://drive.google.com/uc?export=download&id=1uAoGAH8w_nYWSmv1IJBtTKfJzWgwPzsc"

# Carregar os dados
comercio_df = pd.read_csv(url_comercio)
producao_df = pd.read_csv(url_producao)

# Verificar se existem colunas de 'categoria' e 'subcategoria'
if 'categoria' not in comercio_df.columns or 'subcategoria' not in comercio_df.columns:
    # Dividir a coluna 'produto' em 'categoria' e 'subcategoria'
    comercio_df['categoria'] = comercio_df['produto'].str.split(' - ', n=1).str[0]
    comercio_df['subcategoria'] = comercio_df['produto'].str.split(' - ', n=1).str[1]
    producao_df['categoria'] = producao_df['produto'].str.split(' - ', n=1).str[0]
    producao_df['subcategoria'] = producao_df['produto'].str.split(' - ', n=1).str[1]

# Mostrar a estrutura dos dados
st.markdown("### Dados de Com√©rcio e Produ√ß√£o")
st.write("Abaixo est√£o os dados de com√©rcio e produ√ß√£o carregados para an√°lise.")

st.subheader("Dados de Com√©rcio")
st.dataframe(comercio_df.head())

st.subheader("Dados de Produ√ß√£o")
st.dataframe(producao_df.head())

# Obter lista de anos dispon√≠veis (assumindo que as colunas de anos consistem apenas de d√≠gitos)
anos_disponiveis = [col for col in comercio_df.columns if col.isdigit()]

st.markdown("### Selecione o Ano, a Categoria e as Subcategorias para Compara√ß√£o")

# Sele√ß√£o do ano
ano_escolhido = st.selectbox("Selecione um ano para visualiza√ß√£o:", anos_disponiveis)

# Sele√ß√£o de categoria
categorias_disponiveis = sorted(comercio_df['categoria'].dropna().unique())
categoria_escolhida = st.selectbox("Selecione uma categoria:", categorias_disponiveis)

# Filtrar subcategorias com base na categoria selecionada
subcategorias_disponiveis = sorted(comercio_df[comercio_df['categoria'] == categoria_escolhida]['subcategoria'].dropna().unique())

# Verificar se h√° subcategorias dispon√≠veis
if subcategorias_disponiveis:
    # Sele√ß√£o de subcategorias
    subcategorias_escolhidas = st.multiselect("Selecione as subcategorias para compara√ß√£o:", subcategorias_disponiveis, default=subcategorias_disponiveis[:5])
else:
    subcategorias_escolhidas = []
    st.write("N√£o h√° subcategorias dispon√≠veis para esta categoria.")

# Filtrar dados de acordo com a categoria e subcategorias selecionadas
if subcategorias_escolhidas:
    comercio_selecionado = comercio_df[
        (comercio_df['categoria'] == categoria_escolhida) & 
        (comercio_df['subcategoria'].isin(subcategorias_escolhidas))
    ][['categoria', 'subcategoria', 'produto', ano_escolhido]]

    producao_selecionado = producao_df[
        (producao_df['categoria'] == categoria_escolhida) & 
        (producao_df['subcategoria'].isin(subcategorias_escolhidas))
    ][['categoria', 'subcategoria', 'produto', ano_escolhido]]
else:
    comercio_selecionado = comercio_df[
        (comercio_df['categoria'] == categoria_escolhida)
    ][['categoria', 'subcategoria', 'produto', ano_escolhido]]

    producao_selecionado = producao_df[
        (producao_df['categoria'] == categoria_escolhida)
    ][['categoria', 'subcategoria', 'produto', ano_escolhido]]

# Mesclar dados para exibir lado a lado
dados_comparacao = pd.merge(
    comercio_selecionado, 
    producao_selecionado, 
    on=['categoria', 'subcategoria', 'produto'], 
    suffixes=('_Com√©rcio', '_Produ√ß√£o')
)

st.markdown("### Tabela de Compara√ß√£o de Com√©rcio e Produ√ß√£o")
st.write("A tabela abaixo mostra uma compara√ß√£o entre os valores de com√©rcio e produ√ß√£o para as sele√ß√µes feitas no ano escolhido.")
st.dataframe(dados_comparacao)

# Verificar se h√° dados para exibir
if not dados_comparacao.empty:
    # Gr√°fico de Barras Agrupadas para Compara√ß√£o
    st.markdown("## Compara√ß√£o Visual de Com√©rcio e Produ√ß√£o no Ano Selecionado")
    
    fig, ax = plt.subplots(figsize=(10, 6))
    largura = 0.35  # Largura das barras
    
    # √çndices para as barras
    indices = range(len(dados_comparacao))
    
    # Converter valores para num√©ricos (caso sejam strings)
    dados_comparacao[ano_escolhido + '_Com√©rcio'] = pd.to_numeric(dados_comparacao[ano_escolhido + '_Com√©rcio'], errors='coerce')
    dados_comparacao[ano_escolhido + '_Produ√ß√£o'] = pd.to_numeric(dados_comparacao[ano_escolhido + '_Produ√ß√£o'], errors='coerce')
    
    # Substituir NaN por 0
    dados_comparacao[ano_escolhido + '_Com√©rcio'] = dados_comparacao[ano_escolhido + '_Com√©rcio'].fillna(0)
    dados_comparacao[ano_escolhido + '_Produ√ß√£o'] = dados_comparacao[ano_escolhido + '_Produ√ß√£o'].fillna(0)
    
    # Plotar barras lado a lado
    ax.bar(indices, dados_comparacao[ano_escolhido + '_Com√©rcio'], largura, label='Com√©rcio', color='skyblue')
    ax.bar([i + largura for i in indices], dados_comparacao[ano_escolhido + '_Produ√ß√£o'], largura, label='Produ√ß√£o', color='salmon')
    
    # T√≠tulos e etiquetas
    ax.set_xlabel("Produtos")
    ax.set_ylabel("Quantidade (Litros)")
    ax.set_title(f"Compara√ß√£o entre Com√©rcio e Produ√ß√£o de Vinhos em {ano_escolhido}")
    ax.set_xticks([i + largura / 2 for i in indices])
    ax.set_xticklabels(dados_comparacao['produto'], rotation=45)
    ax.legend()
    
    st.pyplot(fig)
    
    # Explica√ß√£o em portugu√™s
    st.markdown("### Explica√ß√£o dos Gr√°ficos e Dados")
    st.write("""
    Esses gr√°ficos comparam as quantidades de com√©rcio e produ√ß√£o dos produtos selecionados para o ano escolhido. 
    As barras azuis representam o com√©rcio, enquanto as barras vermelhas mostram a produ√ß√£o. 
    Se a produ√ß√£o √© maior do que o com√©rcio, pode-se observar uma maior reten√ß√£o no mercado interno ou nos estoques. 
    Esses insights s√£o √∫teis para entender a din√¢mica entre o que √© produzido e o que √© efetivamente comercializado.
    """)
else:
    st.write("N√£o h√° dados dispon√≠veis para as sele√ß√µes feitas.")

# Gr√°fico de Linha para Visualizar Tend√™ncia ao Longo dos Anos
st.markdown("## Tend√™ncia Anual")

anos_selecionados = st.multiselect("Selecione os anos para a visualiza√ß√£o de tend√™ncia:", anos_disponiveis, default=anos_disponiveis[:5])

if anos_selecionados:
    # Filtrar dados para os anos selecionados
    if subcategorias_escolhidas:
        comercio_tendencia = comercio_df[
            (comercio_df['categoria'] == categoria_escolhida) &
            (comercio_df['subcategoria'].isin(subcategorias_escolhidas))
        ].set_index('produto')[anos_selecionados]
        
        producao_tendencia = producao_df[
            (producao_df['categoria'] == categoria_escolhida) &
            (producao_df['subcategoria'].isin(subcategorias_escolhidas))
        ].set_index('produto')[anos_selecionados]
    else:
        comercio_tendencia = comercio_df[
            (comercio_df['categoria'] == categoria_escolhida)
        ].set_index('produto')[anos_selecionados]
        
        producao_tendencia = producao_df[
            (producao_df['categoria'] == categoria_escolhida)
        ].set_index('produto')[anos_selecionados]
    
    st.markdown("### Com√©rcio - Tend√™ncia Anual")
    st.line_chart(comercio_tendencia.T)
    
    st.markdown("### Produ√ß√£o - Tend√™ncia Anual")
    st.line_chart(producao_tendencia.T)
    
    st.markdown("### Explica√ß√£o da Tend√™ncia Anual")
    st.write("""
    Os gr√°ficos de linha exibem a tend√™ncia anual de com√©rcio e produ√ß√£o para os produtos selecionados.
    Essa visualiza√ß√£o √© √∫til para identificar mudan√ßas ao longo do tempo, como crescimento ou diminui√ß√£o das atividades de com√©rcio e produ√ß√£o. 
    Essas tend√™ncias s√£o essenciais para uma an√°lise estrat√©gica e proje√ß√µes futuras no setor de vinhos.
    """)
else:
    st.write("Selecione pelo menos um ano para visualizar a tend√™ncia anual.")

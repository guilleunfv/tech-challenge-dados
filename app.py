import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt

# Configura o layout da p√°gina
st.set_page_config(page_title="Tech Challenge - An√°lise de Vinhos", layout="centered")

# T√≠tulo e Introdu√ß√£o
st.title("Tech Challenge - An√°lise de Produ√ß√£o e Com√©rcio de Vinhos üçá")
st.markdown("### Integrantes do Grupo")
st.write("Rosicleia Cavalcante Mota")
st.write("Nathalia Dias Araujo")
st.write("Guillermo Jesus Camahuali Privat")
st.write("Kelly Priscilla Matos Campos")

st.markdown("## Introdu√ß√£o")
st.write("Esta aplica√ß√£o apresenta uma an√°lise detalhada da produ√ß√£o e do com√©rcio de vinhos nos √∫ltimos anos, com foco nas tend√™ncias e compara√ß√µes entre diferentes categorias e subcategorias.")

# Carregar os Dados diretamente do Google Drive
url_comercio = "https://drive.google.com/uc?export=download&id=1f6lHD3fjVLtkyWtP7CgY2vplfAJ9mAkN"
url_producao = "https://drive.google.com/uc?export=download&id=1uAoGAH8w_nYWSmv1IJBtTKfJzWgwPzsc"

comercio_df = pd.read_csv(url_comercio)
producao_df = pd.read_csv(url_producao)

# Exibir dados
st.markdown("### Dados de Com√©rcio e Produ√ß√£o")
st.write("Abaixo est√£o os dados de com√©rcio e produ√ß√£o carregados para an√°lise.")

st.subheader("Dados de Com√©rcio")
st.dataframe(comercio_df.head())

st.subheader("Dados de Produ√ß√£o")
st.dataframe(producao_df.head())

# Sele√ß√£o de Ano e Produtos para compara√ß√£o
anos_disponiveis = comercio_df.columns[1:]  # Supondo que a primeira coluna √© categoria, os demais s√£o anos
produtos_disponiveis = sorted(comercio_df[comercio_df.columns[0]].unique())

st.markdown("### Selecione o Ano e os Produtos para Compara√ß√£o")

# Widgets para sele√ß√£o
ano_escolhido = st.selectbox("Selecione um ano para visualiza√ß√£o:", anos_disponiveis)
produtos_escolhidos = st.multiselect("Selecione as categorias e subcategorias para compara√ß√£o:", produtos_disponiveis, default=produtos_disponiveis[:5])

# Filtrar dados de acordo com o ano e produtos selecionados
comercio_selecionado = comercio_df[comercio_df[comercio_df.columns[0]].isin(produtos_escolhidos)][[comercio_df.columns[0], ano_escolhido]]
producao_selecionado = producao_df[producao_df[producao_df.columns[0]].isin(produtos_escolhidos)][[producao_df.columns[0], ano_escolhido]]

# Mesclar dados para exibir lado a lado
dados_comparacao = pd.merge(comercio_selecionado, producao_selecionado, on=comercio_df.columns[0], suffixes=('_Com√©rcio', '_Produ√ß√£o'))
st.markdown("### Tabela de Compara√ß√£o de Com√©rcio e Produ√ß√£o")
st.write("A tabela abaixo mostra uma compara√ß√£o entre os valores de com√©rcio e produ√ß√£o para as categorias e subcategorias selecionadas no ano escolhido.")
st.dataframe(dados_comparacao)

# Gr√°fico de Barras Agrupadas para Compara√ß√£o
st.markdown("## Compara√ß√£o Visual de Com√©rcio e Produ√ß√£o no Ano Selecionado")

fig, ax = plt.subplots(figsize=(10, 6))
largura = 0.35  # largura das barras

# √çndices para as barras
indices = range(len(dados_comparacao))

# Plotar barras lado a lado
ax.bar(indices, dados_comparacao[f"{ano_escolhido}_Com√©rcio"], largura, label='Com√©rcio', color='skyblue')
ax.bar([i + largura for i in indices], dados_comparacao[f"{ano_escolhido}_Produ√ß√£o"], largura, label='Produ√ß√£o', color='salmon')

# T√≠tulos e etiquetas
ax.set_xlabel("Categorias/Subcategorias")
ax.set_ylabel("Quantidade (Litros)")
ax.set_title(f"Compara√ß√£o entre Com√©rcio e Produ√ß√£o de Vinhos em {ano_escolhido}")
ax.set_xticks([i + largura / 2 for i in indices])
ax.set_xticklabels(dados_comparacao[comercio_df.columns[0]], rotation=45)
ax.legend()

st.pyplot(fig)

# Explica√ß√£o em portugu√™s
st.markdown("### Explica√ß√£o dos Gr√°ficos e Dados")
st.write("""
Esses gr√°ficos comparam as quantidades de com√©rcio e produ√ß√£o das categorias e subcategorias selecionadas para o ano escolhido. 
As barras azuis representam o com√©rcio, enquanto as barras vermelhas mostram a produ√ß√£o. 
Se a produ√ß√£o √© maior do que o com√©rcio, pode-se observar uma maior reten√ß√£o no mercado interno ou nos estoques. 
Esses insights s√£o √∫teis para entender a din√¢mica entre o que √© produzido e o que √© efetivamente comercializado.
""")

# Gr√°fico de Linha para Visualizar Tend√™ncia ao Longo dos Anos
st.markdown("## Tend√™ncia Anual")
anos_selecionados = st.multiselect("Selecione os anos para a visualiza√ß√£o de tend√™ncia:", anos_disponiveis, default=anos_disponiveis[:5])

# Verifica√ß√£o para evitar erro quando n√£o h√° anos selecionados
if anos_selecionados:
    # Filtrar dados para os anos selecionados
    comercio_tendencia = comercio_df[comercio_df[comercio_df.columns[0]].isin(produtos_escolhidos)].set_index(comercio_df.columns[0])[anos_selecionados]
    producao_tendencia = producao_df[producao_df[producao_df.columns[0]].isin(produtos_escolhidos)].set_index(producao_df.columns[0])[anos_selecionados]

    st.markdown("### Com√©rcio - Tend√™ncia Anual")
    st.line_chart(comercio_tendencia)

    st.markdown("### Produ√ß√£o - Tend√™ncia Anual")
    st.line_chart(producao_tendencia)

st.markdown("### Explica√ß√£o da Tend√™ncia Anual")
st.write("""
Os gr√°ficos de linha exibem a tend√™ncia anual de com√©rcio e produ√ß√£o para as categorias e subcategorias selecionadas.
Essa visualiza√ß√£o √© √∫til para identificar mudan√ßas ao longo do tempo, como crescimento ou diminui√ß√£o das atividades de com√©rcio e produ√ß√£o. 
Essas tend√™ncias s√£o essenciais para uma an√°lise estrat√©gica e proje√ß√µes futuras no setor de vinhos.
""")

